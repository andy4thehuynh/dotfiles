" Example Vim configuration.
" Copy or symlink to ~/.vimrc

" Pathogen configuration
execute pathogen#infect()

set nocompatible                  " Must come first because it changes other options.

syntax on
syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=10                  " Show 10 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

" Setting shell for vim
set shell=sh
"
" Syntax Completion
filetype plugin on
set ofu=syntaxcomplete#Complete

" Supertab
let g:SuperTabDefaultCompletionType = "context"

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=.,$TEMP             " Keep swap files in one location
set backupdir=.,$TEMP             " Keep swap files in one location
set noswapfile                    " No swap files

" UNCOMMENT TO USE
set expandtab                     " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time

" Mote
au BufRead,BufNewFile *.mote setfiletype html
au BufRead,BufNewFile *.mote set syntax=mote

" Useful status information at bottom of screen [tpope's statusline]
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" NERDTree
let NERDTreeShowHidden=0

" fzf
set rtp+=/usr/local/opt/fzf
noremap <C-P> :FZF<CR>

" Color Scheme Solarized
colorscheme dracula
set background=dark
" set t_Co=256         " For Solarized

" toggle hybrid line numbers
:set number relativenumber
:set nu rnu

" Map cursor for insert mode
let &t_SI .= "\<Esc>[5 q"
" solid block
let &t_EI .= "\<Esc>[2 q"
" " 1 or 0 -> blinking block
" " 3 -> blinking underscore
" " Recent versions of xterm (282 or above) also support
" " 5 -> blinking vertical bar
" " 6 -> solid vertical bar

" Splitting
map <Leader>- :split<CR>
map <Leader><bar> :vsplit<CR>

map <leader>n :NERDTreeToggle<cr>
map <leader>G :Gist<Space>
map <leader>c :CtrlPClearAllCaches<cr>
map <leader>a :Ack<Space>
map <leader>gb :Gblame<cr>
map <leader>gB :Gbrowse<cr>

" Removing search highlighting
nnoremap <ESC><ESC> :nohlsearch<CR>

" Split navigation resizing
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Zencoding
let g:user_zen_expandabbr_key='<C-e>'
let g:user_zen_settings = { 'erb': { 'extends': 'html'  }  }

" Disable arrow keys
noremap   <Up>     <NOP>
noremap   <Down>   <NOP>
noremap   <Left>   <NOP>
noremap   <Right>  <NOP>

" Ragtime
let g:ragtag_global_maps = 1

" vim-go GOLANG
let g:go_fmt_command = "goimports"
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>i <Plug>(go-install)
au FileType go nmap <leader>gd <Plug>(go-doc)

" paste/nopaste
map <Leader>p :set paste<CR>
map <Leader>P :set nopaste<CR>

" tabularize
map :tab :Tabularize /=

" JSX highlighting in .js files
let g:jsx_ext_required = 0

" add spell checking and automatic wrapping at the recommended 72 columns to
" you commit messages
autocmd Filetype gitcommit setlocal spell textwidth=72

" vim-flake8 - Flake8 Python Vim formatter
autocmd BufWritePost *.py call flake8#Flake8()

" enable all Python syntax highlighting features
let python_highlight_all = 1

" Vim-solidity
augroup quickfix
  autocmd!
  autocmd QuickFixCmdPost make nested copen
augroup END


" Gruvbox vim config
"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

let g:gruvbox_termcolors=16
